
Stm32F446RE_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000066c  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000830  08000838  00010838  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000830  08000830  00010838  2**0
                  CONTENTS
  4 .ARM          00000000  08000830  08000830  00010838  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000830  08000838  00010838  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000830  08000830  00010830  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000834  08000834  00010834  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010838  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000838  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000838  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010838  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010862  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009f9  00000000  00000000  000108a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002a3  00000000  00000000  0001129e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  00011548  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000007e  00000000  00000000  00011600  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001573  00000000  00000000  0001167e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000c98  00000000  00000000  00012bf1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005f55  00000000  00000000  00013889  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000224  00000000  00000000  000197e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000060  00000000  00000000  00019a04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000818 	.word	0x08000818

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000818 	.word	0x08000818

08000204 <GPIO_PeripheralClkCtrl>:

#include "stm32f446xx_gpio_driver.h"


void GPIO_PeripheralClkCtrl(GPIO_RegDef_t *pGPIOx, uint8_t EnOrDi)
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
 800020c:	460b      	mov	r3, r1
 800020e:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == ENABLE)
 8000210:	78fb      	ldrb	r3, [r7, #3]
 8000212:	2b01      	cmp	r3, #1
 8000214:	d157      	bne.n	80002c6 <GPIO_PeripheralClkCtrl+0xc2>
	{
		if(pGPIOx == GPIOA)
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a59      	ldr	r2, [pc, #356]	; (8000380 <GPIO_PeripheralClkCtrl+0x17c>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d106      	bne.n	800022c <GPIO_PeripheralClkCtrl+0x28>
		{
			GPIOA_PERI_CLK_EN();
 800021e:	4b59      	ldr	r3, [pc, #356]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000220:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000222:	4a58      	ldr	r2, [pc, #352]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000224:	f043 0301 	orr.w	r3, r3, #1
 8000228:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOH)
		{
			GPIOH_PERI_CLK_DI();
		}
	}
}
 800022a:	e0a3      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOB)
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	4a56      	ldr	r2, [pc, #344]	; (8000388 <GPIO_PeripheralClkCtrl+0x184>)
 8000230:	4293      	cmp	r3, r2
 8000232:	d106      	bne.n	8000242 <GPIO_PeripheralClkCtrl+0x3e>
			GPIOB_PERI_CLK_EN();
 8000234:	4b53      	ldr	r3, [pc, #332]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000236:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000238:	4a52      	ldr	r2, [pc, #328]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800023a:	f043 0302 	orr.w	r3, r3, #2
 800023e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000240:	e098      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOC)
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	4a51      	ldr	r2, [pc, #324]	; (800038c <GPIO_PeripheralClkCtrl+0x188>)
 8000246:	4293      	cmp	r3, r2
 8000248:	d106      	bne.n	8000258 <GPIO_PeripheralClkCtrl+0x54>
			GPIOC_PERI_CLK_EN();
 800024a:	4b4e      	ldr	r3, [pc, #312]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800024c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024e:	4a4d      	ldr	r2, [pc, #308]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000250:	f043 0304 	orr.w	r3, r3, #4
 8000254:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000256:	e08d      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOD)
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	4a4d      	ldr	r2, [pc, #308]	; (8000390 <GPIO_PeripheralClkCtrl+0x18c>)
 800025c:	4293      	cmp	r3, r2
 800025e:	d106      	bne.n	800026e <GPIO_PeripheralClkCtrl+0x6a>
			GPIOD_PERI_CLK_EN();
 8000260:	4b48      	ldr	r3, [pc, #288]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000262:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000264:	4a47      	ldr	r2, [pc, #284]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000266:	f043 0308 	orr.w	r3, r3, #8
 800026a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800026c:	e082      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOE)
 800026e:	687b      	ldr	r3, [r7, #4]
 8000270:	4a48      	ldr	r2, [pc, #288]	; (8000394 <GPIO_PeripheralClkCtrl+0x190>)
 8000272:	4293      	cmp	r3, r2
 8000274:	d106      	bne.n	8000284 <GPIO_PeripheralClkCtrl+0x80>
			GPIOE_PERI_CLK_EN();
 8000276:	4b43      	ldr	r3, [pc, #268]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000278:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800027a:	4a42      	ldr	r2, [pc, #264]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800027c:	f043 0310 	orr.w	r3, r3, #16
 8000280:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000282:	e077      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOF)
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	4a44      	ldr	r2, [pc, #272]	; (8000398 <GPIO_PeripheralClkCtrl+0x194>)
 8000288:	4293      	cmp	r3, r2
 800028a:	d106      	bne.n	800029a <GPIO_PeripheralClkCtrl+0x96>
			GPIOF_PERI_CLK_EN();
 800028c:	4b3d      	ldr	r3, [pc, #244]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800028e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000290:	4a3c      	ldr	r2, [pc, #240]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000292:	f043 0320 	orr.w	r3, r3, #32
 8000296:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000298:	e06c      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOG)
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	4a3f      	ldr	r2, [pc, #252]	; (800039c <GPIO_PeripheralClkCtrl+0x198>)
 800029e:	4293      	cmp	r3, r2
 80002a0:	d106      	bne.n	80002b0 <GPIO_PeripheralClkCtrl+0xac>
			GPIOG_PERI_CLK_EN();
 80002a2:	4b38      	ldr	r3, [pc, #224]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a6:	4a37      	ldr	r2, [pc, #220]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002ac:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ae:	e061      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOH)
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	4a3b      	ldr	r2, [pc, #236]	; (80003a0 <GPIO_PeripheralClkCtrl+0x19c>)
 80002b4:	4293      	cmp	r3, r2
 80002b6:	d15d      	bne.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
			GPIOH_PERI_CLK_EN();
 80002b8:	4b32      	ldr	r3, [pc, #200]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002bc:	4a31      	ldr	r2, [pc, #196]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002be:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002c2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c4:	e056      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		if(pGPIOx == GPIOA)
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	4a2d      	ldr	r2, [pc, #180]	; (8000380 <GPIO_PeripheralClkCtrl+0x17c>)
 80002ca:	4293      	cmp	r3, r2
 80002cc:	d106      	bne.n	80002dc <GPIO_PeripheralClkCtrl+0xd8>
			GPIOA_PERI_CLK_DI();
 80002ce:	4b2d      	ldr	r3, [pc, #180]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d2:	4a2c      	ldr	r2, [pc, #176]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002d4:	f023 0301 	bic.w	r3, r3, #1
 80002d8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002da:	e04b      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOB)
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	4a2a      	ldr	r2, [pc, #168]	; (8000388 <GPIO_PeripheralClkCtrl+0x184>)
 80002e0:	4293      	cmp	r3, r2
 80002e2:	d106      	bne.n	80002f2 <GPIO_PeripheralClkCtrl+0xee>
			GPIOB_PERI_CLK_DI();
 80002e4:	4b27      	ldr	r3, [pc, #156]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e8:	4a26      	ldr	r2, [pc, #152]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002ea:	f023 0302 	bic.w	r3, r3, #2
 80002ee:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f0:	e040      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOC)
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	4a25      	ldr	r2, [pc, #148]	; (800038c <GPIO_PeripheralClkCtrl+0x188>)
 80002f6:	4293      	cmp	r3, r2
 80002f8:	d106      	bne.n	8000308 <GPIO_PeripheralClkCtrl+0x104>
			GPIOC_PERI_CLK_DI();
 80002fa:	4b22      	ldr	r3, [pc, #136]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002fe:	4a21      	ldr	r2, [pc, #132]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000300:	f023 0304 	bic.w	r3, r3, #4
 8000304:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000306:	e035      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOD)
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	4a21      	ldr	r2, [pc, #132]	; (8000390 <GPIO_PeripheralClkCtrl+0x18c>)
 800030c:	4293      	cmp	r3, r2
 800030e:	d106      	bne.n	800031e <GPIO_PeripheralClkCtrl+0x11a>
			GPIOD_PERI_CLK_DI();
 8000310:	4b1c      	ldr	r3, [pc, #112]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000314:	4a1b      	ldr	r2, [pc, #108]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000316:	f023 0308 	bic.w	r3, r3, #8
 800031a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800031c:	e02a      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOE)
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a1c      	ldr	r2, [pc, #112]	; (8000394 <GPIO_PeripheralClkCtrl+0x190>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d106      	bne.n	8000334 <GPIO_PeripheralClkCtrl+0x130>
			GPIOE_PERI_CLK_DI();
 8000326:	4b17      	ldr	r3, [pc, #92]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000328:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032a:	4a16      	ldr	r2, [pc, #88]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800032c:	f023 0310 	bic.w	r3, r3, #16
 8000330:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000332:	e01f      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOF)
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	4a18      	ldr	r2, [pc, #96]	; (8000398 <GPIO_PeripheralClkCtrl+0x194>)
 8000338:	4293      	cmp	r3, r2
 800033a:	d106      	bne.n	800034a <GPIO_PeripheralClkCtrl+0x146>
			GPIOF_PERI_CLK_DI();
 800033c:	4b11      	ldr	r3, [pc, #68]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000340:	4a10      	ldr	r2, [pc, #64]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000342:	f023 0320 	bic.w	r3, r3, #32
 8000346:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000348:	e014      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOG)
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a13      	ldr	r2, [pc, #76]	; (800039c <GPIO_PeripheralClkCtrl+0x198>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d106      	bne.n	8000360 <GPIO_PeripheralClkCtrl+0x15c>
			GPIOG_PERI_CLK_DI();
 8000352:	4b0c      	ldr	r3, [pc, #48]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000356:	4a0b      	ldr	r2, [pc, #44]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000358:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800035c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035e:	e009      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOH)
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a0f      	ldr	r2, [pc, #60]	; (80003a0 <GPIO_PeripheralClkCtrl+0x19c>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d105      	bne.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
			GPIOH_PERI_CLK_DI();
 8000368:	4b06      	ldr	r3, [pc, #24]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800036a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036c:	4a05      	ldr	r2, [pc, #20]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800036e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000372:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000374:	bf00      	nop
 8000376:	370c      	adds	r7, #12
 8000378:	46bd      	mov	sp, r7
 800037a:	bc80      	pop	{r7}
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop
 8000380:	40020000 	.word	0x40020000
 8000384:	40023800 	.word	0x40023800
 8000388:	40020400 	.word	0x40020400
 800038c:	40020800 	.word	0x40020800
 8000390:	40020c00 	.word	0x40020c00
 8000394:	40021000 	.word	0x40021000
 8000398:	40021400 	.word	0x40021400
 800039c:	40021800 	.word	0x40021800
 80003a0:	40021c00 	.word	0x40021c00

080003a4 <GPIO_Inint>:


void GPIO_Inint(GPIOx_Handle_t *pGPIOHandle)
{
 80003a4:	b480      	push	{r7}
 80003a6:	b087      	sub	sp, #28
 80003a8:	af00      	add	r7, sp, #0
 80003aa:	6078      	str	r0, [r7, #4]

	uint32_t temp = 0;
 80003ac:	2300      	movs	r3, #0
 80003ae:	617b      	str	r3, [r7, #20]

	//Configure GPIO MODE
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	795b      	ldrb	r3, [r3, #5]
 80003b4:	2b03      	cmp	r3, #3
 80003b6:	d81f      	bhi.n	80003f8 <GPIO_Inint+0x54>
	{
		// Non Interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode) << ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) * 2);
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	795b      	ldrb	r3, [r3, #5]
 80003bc:	461a      	mov	r2, r3
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	791b      	ldrb	r3, [r3, #4]
 80003c2:	005b      	lsls	r3, r3, #1
 80003c4:	fa02 f303 	lsl.w	r3, r2, r3
 80003c8:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	681b      	ldr	r3, [r3, #0]
 80003ce:	681a      	ldr	r2, [r3, #0]
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	791b      	ldrb	r3, [r3, #4]
 80003d4:	4619      	mov	r1, r3
 80003d6:	2303      	movs	r3, #3
 80003d8:	408b      	lsls	r3, r1
 80003da:	43db      	mvns	r3, r3
 80003dc:	4619      	mov	r1, r3
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	400a      	ands	r2, r1
 80003e4:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	6819      	ldr	r1, [r3, #0]
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	697a      	ldr	r2, [r7, #20]
 80003f2:	430a      	orrs	r2, r1
 80003f4:	601a      	str	r2, [r3, #0]
 80003f6:	e083      	b.n	8000500 <GPIO_Inint+0x15c>
	}
	else
	{
		//Configure FALING TRIGGER SLECTION REGISTER (FTSR)
		if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	795b      	ldrb	r3, [r3, #5]
 80003fc:	2b04      	cmp	r3, #4
 80003fe:	d117      	bne.n	8000430 <GPIO_Inint+0x8c>
		{
			//Set FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000400:	4b9e      	ldr	r3, [pc, #632]	; (800067c <GPIO_Inint+0x2d8>)
 8000402:	68db      	ldr	r3, [r3, #12]
 8000404:	687a      	ldr	r2, [r7, #4]
 8000406:	7912      	ldrb	r2, [r2, #4]
 8000408:	4611      	mov	r1, r2
 800040a:	2201      	movs	r2, #1
 800040c:	408a      	lsls	r2, r1
 800040e:	4611      	mov	r1, r2
 8000410:	4a9a      	ldr	r2, [pc, #616]	; (800067c <GPIO_Inint+0x2d8>)
 8000412:	430b      	orrs	r3, r1
 8000414:	60d3      	str	r3, [r2, #12]

			//Clear FTSR
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000416:	4b99      	ldr	r3, [pc, #612]	; (800067c <GPIO_Inint+0x2d8>)
 8000418:	689b      	ldr	r3, [r3, #8]
 800041a:	687a      	ldr	r2, [r7, #4]
 800041c:	7912      	ldrb	r2, [r2, #4]
 800041e:	4611      	mov	r1, r2
 8000420:	2201      	movs	r2, #1
 8000422:	408a      	lsls	r2, r1
 8000424:	43d2      	mvns	r2, r2
 8000426:	4611      	mov	r1, r2
 8000428:	4a94      	ldr	r2, [pc, #592]	; (800067c <GPIO_Inint+0x2d8>)
 800042a:	400b      	ands	r3, r1
 800042c:	6093      	str	r3, [r2, #8]
 800042e:	e035      	b.n	800049c <GPIO_Inint+0xf8>
		}
		//Configure RISING TRIGGER SLECTION REGISTER (RTSR)
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	795b      	ldrb	r3, [r3, #5]
 8000434:	2b05      	cmp	r3, #5
 8000436:	d117      	bne.n	8000468 <GPIO_Inint+0xc4>
		{
			//Set RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000438:	4b90      	ldr	r3, [pc, #576]	; (800067c <GPIO_Inint+0x2d8>)
 800043a:	689b      	ldr	r3, [r3, #8]
 800043c:	687a      	ldr	r2, [r7, #4]
 800043e:	7912      	ldrb	r2, [r2, #4]
 8000440:	4611      	mov	r1, r2
 8000442:	2201      	movs	r2, #1
 8000444:	408a      	lsls	r2, r1
 8000446:	4611      	mov	r1, r2
 8000448:	4a8c      	ldr	r2, [pc, #560]	; (800067c <GPIO_Inint+0x2d8>)
 800044a:	430b      	orrs	r3, r1
 800044c:	6093      	str	r3, [r2, #8]

			//Clear FTSR
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800044e:	4b8b      	ldr	r3, [pc, #556]	; (800067c <GPIO_Inint+0x2d8>)
 8000450:	68db      	ldr	r3, [r3, #12]
 8000452:	687a      	ldr	r2, [r7, #4]
 8000454:	7912      	ldrb	r2, [r2, #4]
 8000456:	4611      	mov	r1, r2
 8000458:	2201      	movs	r2, #1
 800045a:	408a      	lsls	r2, r1
 800045c:	43d2      	mvns	r2, r2
 800045e:	4611      	mov	r1, r2
 8000460:	4a86      	ldr	r2, [pc, #536]	; (800067c <GPIO_Inint+0x2d8>)
 8000462:	400b      	ands	r3, r1
 8000464:	60d3      	str	r3, [r2, #12]
 8000466:	e019      	b.n	800049c <GPIO_Inint+0xf8>
		}
		//Configure FALING and RISING SLECTION REGISTER (FTSR and RTSR)
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FRT)
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	795b      	ldrb	r3, [r3, #5]
 800046c:	2b06      	cmp	r3, #6
 800046e:	d115      	bne.n	800049c <GPIO_Inint+0xf8>
		{
			//Set FTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000470:	4b82      	ldr	r3, [pc, #520]	; (800067c <GPIO_Inint+0x2d8>)
 8000472:	689b      	ldr	r3, [r3, #8]
 8000474:	687a      	ldr	r2, [r7, #4]
 8000476:	7912      	ldrb	r2, [r2, #4]
 8000478:	4611      	mov	r1, r2
 800047a:	2201      	movs	r2, #1
 800047c:	408a      	lsls	r2, r1
 800047e:	4611      	mov	r1, r2
 8000480:	4a7e      	ldr	r2, [pc, #504]	; (800067c <GPIO_Inint+0x2d8>)
 8000482:	430b      	orrs	r3, r1
 8000484:	6093      	str	r3, [r2, #8]
			//Set FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000486:	4b7d      	ldr	r3, [pc, #500]	; (800067c <GPIO_Inint+0x2d8>)
 8000488:	68db      	ldr	r3, [r3, #12]
 800048a:	687a      	ldr	r2, [r7, #4]
 800048c:	7912      	ldrb	r2, [r2, #4]
 800048e:	4611      	mov	r1, r2
 8000490:	2201      	movs	r2, #1
 8000492:	408a      	lsls	r2, r1
 8000494:	4611      	mov	r1, r2
 8000496:	4a79      	ldr	r2, [pc, #484]	; (800067c <GPIO_Inint+0x2d8>)
 8000498:	430b      	orrs	r3, r1
 800049a:	60d3      	str	r3, [r2, #12]
		}

		//Configure the GPIO port selection in SYSCFG_EXTICR

		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	791b      	ldrb	r3, [r3, #4]
 80004a0:	089b      	lsrs	r3, r3, #2
 80004a2:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	791b      	ldrb	r3, [r3, #4]
 80004a8:	f003 0303 	and.w	r3, r3, #3
 80004ac:	74bb      	strb	r3, [r7, #18]
		uint8_t portCode = GPIO_BASE_ADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	681b      	ldr	r3, [r3, #0]
 80004b2:	4a73      	ldr	r2, [pc, #460]	; (8000680 <GPIO_Inint+0x2dc>)
 80004b4:	4293      	cmp	r3, r2
 80004b6:	d006      	beq.n	80004c6 <GPIO_Inint+0x122>
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	681b      	ldr	r3, [r3, #0]
 80004bc:	4a70      	ldr	r2, [pc, #448]	; (8000680 <GPIO_Inint+0x2dc>)
 80004be:	4293      	cmp	r3, r2
 80004c0:	d101      	bne.n	80004c6 <GPIO_Inint+0x122>
 80004c2:	2301      	movs	r3, #1
 80004c4:	e000      	b.n	80004c8 <GPIO_Inint+0x124>
 80004c6:	2300      	movs	r3, #0
 80004c8:	747b      	strb	r3, [r7, #17]
		SYSCFG_PERI_CLK_EN();
 80004ca:	4b6e      	ldr	r3, [pc, #440]	; (8000684 <GPIO_Inint+0x2e0>)
 80004cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80004ce:	4a6d      	ldr	r2, [pc, #436]	; (8000684 <GPIO_Inint+0x2e0>)
 80004d0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80004d4:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portCode << (temp2 * 4);
 80004d6:	7c7a      	ldrb	r2, [r7, #17]
 80004d8:	7cbb      	ldrb	r3, [r7, #18]
 80004da:	009b      	lsls	r3, r3, #2
 80004dc:	fa02 f103 	lsl.w	r1, r2, r3
 80004e0:	4a69      	ldr	r2, [pc, #420]	; (8000688 <GPIO_Inint+0x2e4>)
 80004e2:	7cfb      	ldrb	r3, [r7, #19]
 80004e4:	3302      	adds	r3, #2
 80004e6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		//Enable the EXTI interrupt delivery using IMR(Interrupt Mask Register)
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ea:	4b64      	ldr	r3, [pc, #400]	; (800067c <GPIO_Inint+0x2d8>)
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	687a      	ldr	r2, [r7, #4]
 80004f0:	7912      	ldrb	r2, [r2, #4]
 80004f2:	4611      	mov	r1, r2
 80004f4:	2201      	movs	r2, #1
 80004f6:	408a      	lsls	r2, r1
 80004f8:	4611      	mov	r1, r2
 80004fa:	4a60      	ldr	r2, [pc, #384]	; (800067c <GPIO_Inint+0x2d8>)
 80004fc:	430b      	orrs	r3, r1
 80004fe:	6013      	str	r3, [r2, #0]

	}

	//Configure SPEED
	temp = 0;
 8000500:	2300      	movs	r3, #0
 8000502:	617b      	str	r3, [r7, #20]
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) * 2);
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	799b      	ldrb	r3, [r3, #6]
 8000508:	461a      	mov	r2, r3
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	791b      	ldrb	r3, [r3, #4]
 800050e:	005b      	lsls	r3, r3, #1
 8000510:	fa02 f303 	lsl.w	r3, r2, r3
 8000514:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	689a      	ldr	r2, [r3, #8]
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	791b      	ldrb	r3, [r3, #4]
 8000520:	4619      	mov	r1, r3
 8000522:	2303      	movs	r3, #3
 8000524:	408b      	lsls	r3, r1
 8000526:	43db      	mvns	r3, r3
 8000528:	4619      	mov	r1, r3
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	681b      	ldr	r3, [r3, #0]
 800052e:	400a      	ands	r2, r1
 8000530:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDER |= temp;
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	6899      	ldr	r1, [r3, #8]
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	697a      	ldr	r2, [r7, #20]
 800053e:	430a      	orrs	r2, r1
 8000540:	609a      	str	r2, [r3, #8]

	//Configure Pull up and pull down
	temp = 0;
 8000542:	2300      	movs	r3, #0
 8000544:	617b      	str	r3, [r7, #20]
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdCtrl << ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) * 2);
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	79db      	ldrb	r3, [r3, #7]
 800054a:	461a      	mov	r2, r3
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	791b      	ldrb	r3, [r3, #4]
 8000550:	005b      	lsls	r3, r3, #1
 8000552:	fa02 f303 	lsl.w	r3, r2, r3
 8000556:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	68da      	ldr	r2, [r3, #12]
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	791b      	ldrb	r3, [r3, #4]
 8000562:	4619      	mov	r1, r3
 8000564:	2303      	movs	r3, #3
 8000566:	408b      	lsls	r3, r1
 8000568:	43db      	mvns	r3, r3
 800056a:	4619      	mov	r1, r3
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	681b      	ldr	r3, [r3, #0]
 8000570:	400a      	ands	r2, r1
 8000572:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	68d9      	ldr	r1, [r3, #12]
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	681b      	ldr	r3, [r3, #0]
 800057e:	697a      	ldr	r2, [r7, #20]
 8000580:	430a      	orrs	r2, r1
 8000582:	60da      	str	r2, [r3, #12]

	//Configure output OPtype
	temp = 0;
 8000584:	2300      	movs	r3, #0
 8000586:	617b      	str	r3, [r7, #20]
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	7a1b      	ldrb	r3, [r3, #8]
 800058c:	461a      	mov	r2, r3
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	791b      	ldrb	r3, [r3, #4]
 8000592:	fa02 f303 	lsl.w	r3, r2, r3
 8000596:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	685a      	ldr	r2, [r3, #4]
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	791b      	ldrb	r3, [r3, #4]
 80005a2:	4619      	mov	r1, r3
 80005a4:	2301      	movs	r3, #1
 80005a6:	408b      	lsls	r3, r1
 80005a8:	43db      	mvns	r3, r3
 80005aa:	4619      	mov	r1, r3
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	400a      	ands	r2, r1
 80005b2:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	6859      	ldr	r1, [r3, #4]
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	697a      	ldr	r2, [r7, #20]
 80005c0:	430a      	orrs	r2, r1
 80005c2:	605a      	str	r2, [r3, #4]


	//Configure pin alternate function
	temp = 0;
 80005c4:	2300      	movs	r3, #0
 80005c6:	617b      	str	r3, [r7, #20]
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	7a5b      	ldrb	r3, [r3, #9]
 80005cc:	461a      	mov	r2, r3
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	791b      	ldrb	r3, [r3, #4]
 80005d2:	fa02 f303 	lsl.w	r3, r2, r3
 80005d6:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	685a      	ldr	r2, [r3, #4]
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	791b      	ldrb	r3, [r3, #4]
 80005e2:	4619      	mov	r1, r3
 80005e4:	2301      	movs	r3, #1
 80005e6:	408b      	lsls	r3, r1
 80005e8:	43db      	mvns	r3, r3
 80005ea:	4619      	mov	r1, r3
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	400a      	ands	r2, r1
 80005f2:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	6859      	ldr	r1, [r3, #4]
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	697a      	ldr	r2, [r7, #20]
 8000600:	430a      	orrs	r2, r1
 8000602:	605a      	str	r2, [r3, #4]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	795b      	ldrb	r3, [r3, #5]
 8000608:	2b02      	cmp	r3, #2
 800060a:	d131      	bne.n	8000670 <GPIO_Inint+0x2cc>
	{
		uint8_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	791b      	ldrb	r3, [r3, #4]
 8000610:	08db      	lsrs	r3, r3, #3
 8000612:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	791b      	ldrb	r3, [r3, #4]
 8000618:	f003 0307 	and.w	r3, r3, #7
 800061c:	73fb      	strb	r3, [r7, #15]

		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 800061e:	687b      	ldr	r3, [r7, #4]
 8000620:	681b      	ldr	r3, [r3, #0]
 8000622:	7c3a      	ldrb	r2, [r7, #16]
 8000624:	3208      	adds	r2, #8
 8000626:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800062a:	7bfb      	ldrb	r3, [r7, #15]
 800062c:	009b      	lsls	r3, r3, #2
 800062e:	220f      	movs	r2, #15
 8000630:	fa02 f303 	lsl.w	r3, r2, r3
 8000634:	43db      	mvns	r3, r3
 8000636:	4618      	mov	r0, r3
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	7c3a      	ldrb	r2, [r7, #16]
 800063e:	4001      	ands	r1, r0
 8000640:	3208      	adds	r2, #8
 8000642:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	681b      	ldr	r3, [r3, #0]
 800064a:	7c3a      	ldrb	r2, [r7, #16]
 800064c:	3208      	adds	r2, #8
 800064e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	7a5b      	ldrb	r3, [r3, #9]
 8000656:	461a      	mov	r2, r3
 8000658:	7bfb      	ldrb	r3, [r7, #15]
 800065a:	009b      	lsls	r3, r3, #2
 800065c:	fa02 f303 	lsl.w	r3, r2, r3
 8000660:	4618      	mov	r0, r3
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	681b      	ldr	r3, [r3, #0]
 8000666:	7c3a      	ldrb	r2, [r7, #16]
 8000668:	4301      	orrs	r1, r0
 800066a:	3208      	adds	r2, #8
 800066c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 8000670:	bf00      	nop
 8000672:	371c      	adds	r7, #28
 8000674:	46bd      	mov	sp, r7
 8000676:	bc80      	pop	{r7}
 8000678:	4770      	bx	lr
 800067a:	bf00      	nop
 800067c:	40013c00 	.word	0x40013c00
 8000680:	40020000 	.word	0x40020000
 8000684:	40023800 	.word	0x40023800
 8000688:	40013800 	.word	0x40013800

0800068c <GPIO_ReadFromInputPin>:
	}
}


uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t pinNumber)
{
 800068c:	b480      	push	{r7}
 800068e:	b083      	sub	sp, #12
 8000690:	af00      	add	r7, sp, #0
 8000692:	6078      	str	r0, [r7, #4]
 8000694:	460b      	mov	r3, r1
 8000696:	70fb      	strb	r3, [r7, #3]
	return ((uint8_t)((pGPIOx->IDR >> pinNumber) & 0x1 ));
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	691a      	ldr	r2, [r3, #16]
 800069c:	78fb      	ldrb	r3, [r7, #3]
 800069e:	fa22 f303 	lsr.w	r3, r2, r3
 80006a2:	b2db      	uxtb	r3, r3
 80006a4:	f003 0301 	and.w	r3, r3, #1
 80006a8:	b2db      	uxtb	r3, r3
}
 80006aa:	4618      	mov	r0, r3
 80006ac:	370c      	adds	r7, #12
 80006ae:	46bd      	mov	sp, r7
 80006b0:	bc80      	pop	{r7}
 80006b2:	4770      	bx	lr

080006b4 <GPIO_ToggleOutputPin>:
	pGPIOx->ODR = Value;
}


void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t pinNumber)
{
 80006b4:	b480      	push	{r7}
 80006b6:	b083      	sub	sp, #12
 80006b8:	af00      	add	r7, sp, #0
 80006ba:	6078      	str	r0, [r7, #4]
 80006bc:	460b      	mov	r3, r1
 80006be:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << pinNumber);
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	695b      	ldr	r3, [r3, #20]
 80006c4:	78fa      	ldrb	r2, [r7, #3]
 80006c6:	2101      	movs	r1, #1
 80006c8:	fa01 f202 	lsl.w	r2, r1, r2
 80006cc:	405a      	eors	r2, r3
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	615a      	str	r2, [r3, #20]
}
 80006d2:	bf00      	nop
 80006d4:	370c      	adds	r7, #12
 80006d6:	46bd      	mov	sp, r7
 80006d8:	bc80      	pop	{r7}
 80006da:	4770      	bx	lr

080006dc <buttonDebouncedelay>:
#define HIGH			1
#define LOW				0
#define BUTTON_PRESSED	LOW

void buttonDebouncedelay(void)
{
 80006dc:	b480      	push	{r7}
 80006de:	b083      	sub	sp, #12
 80006e0:	af00      	add	r7, sp, #0
	for ( int i = 0;  i < 400000; ++i);
 80006e2:	2300      	movs	r3, #0
 80006e4:	607b      	str	r3, [r7, #4]
 80006e6:	e002      	b.n	80006ee <buttonDebouncedelay+0x12>
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	3301      	adds	r3, #1
 80006ec:	607b      	str	r3, [r7, #4]
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	4a04      	ldr	r2, [pc, #16]	; (8000704 <buttonDebouncedelay+0x28>)
 80006f2:	4293      	cmp	r3, r2
 80006f4:	ddf8      	ble.n	80006e8 <buttonDebouncedelay+0xc>
}
 80006f6:	bf00      	nop
 80006f8:	bf00      	nop
 80006fa:	370c      	adds	r7, #12
 80006fc:	46bd      	mov	sp, r7
 80006fe:	bc80      	pop	{r7}
 8000700:	4770      	bx	lr
 8000702:	bf00      	nop
 8000704:	00061a7f 	.word	0x00061a7f

08000708 <main>:

//Entry
int main(void)
{
 8000708:	b580      	push	{r7, lr}
 800070a:	b086      	sub	sp, #24
 800070c:	af00      	add	r7, sp, #0
	GPIOx_Handle_t gpioLed;
	GPIOx_Handle_t gpioButton;

	//LED Init
	gpioLed.pGPIOx = GPIOA;
 800070e:	4b19      	ldr	r3, [pc, #100]	; (8000774 <main+0x6c>)
 8000710:	60fb      	str	r3, [r7, #12]
	gpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 8000712:	2305      	movs	r3, #5
 8000714:	743b      	strb	r3, [r7, #16]
	gpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000716:	2301      	movs	r3, #1
 8000718:	747b      	strb	r3, [r7, #17]
	gpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OP_SPEED_HIGH;
 800071a:	2303      	movs	r3, #3
 800071c:	74bb      	strb	r3, [r7, #18]
	gpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800071e:	2300      	movs	r3, #0
 8000720:	753b      	strb	r3, [r7, #20]
	gpioLed.GPIO_PinConfig.GPIO_PinPuPdCtrl = GPIO_NO_PUPD;
 8000722:	2300      	movs	r3, #0
 8000724:	74fb      	strb	r3, [r7, #19]
	GPIO_PeripheralClkCtrl(GPIOA, ENABLE);
 8000726:	2101      	movs	r1, #1
 8000728:	4812      	ldr	r0, [pc, #72]	; (8000774 <main+0x6c>)
 800072a:	f7ff fd6b 	bl	8000204 <GPIO_PeripheralClkCtrl>
	GPIO_Inint(&gpioLed);
 800072e:	f107 030c 	add.w	r3, r7, #12
 8000732:	4618      	mov	r0, r3
 8000734:	f7ff fe36 	bl	80003a4 <GPIO_Inint>

	//Button Init
	gpioLed.pGPIOx = GPIOC;
 8000738:	4b0f      	ldr	r3, [pc, #60]	; (8000778 <main+0x70>)
 800073a:	60fb      	str	r3, [r7, #12]
	gpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 800073c:	230d      	movs	r3, #13
 800073e:	743b      	strb	r3, [r7, #16]
	gpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000740:	2300      	movs	r3, #0
 8000742:	747b      	strb	r3, [r7, #17]
	gpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OP_SPEED_HIGH;
 8000744:	2303      	movs	r3, #3
 8000746:	74bb      	strb	r3, [r7, #18]
	GPIO_PeripheralClkCtrl(GPIOC, ENABLE);
 8000748:	2101      	movs	r1, #1
 800074a:	480b      	ldr	r0, [pc, #44]	; (8000778 <main+0x70>)
 800074c:	f7ff fd5a 	bl	8000204 <GPIO_PeripheralClkCtrl>
	GPIO_Inint(&gpioButton);
 8000750:	463b      	mov	r3, r7
 8000752:	4618      	mov	r0, r3
 8000754:	f7ff fe26 	bl	80003a4 <GPIO_Inint>

	/* Loop forever */
	for(;;)
	{
		if(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13) == BUTTON_PRESSED)// BUtton is Active low
 8000758:	210d      	movs	r1, #13
 800075a:	4807      	ldr	r0, [pc, #28]	; (8000778 <main+0x70>)
 800075c:	f7ff ff96 	bl	800068c <GPIO_ReadFromInputPin>
 8000760:	4603      	mov	r3, r0
 8000762:	2b00      	cmp	r3, #0
 8000764:	d1f8      	bne.n	8000758 <main+0x50>
		{
			buttonDebouncedelay();
 8000766:	f7ff ffb9 	bl	80006dc <buttonDebouncedelay>
			GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 800076a:	2105      	movs	r1, #5
 800076c:	4801      	ldr	r0, [pc, #4]	; (8000774 <main+0x6c>)
 800076e:	f7ff ffa1 	bl	80006b4 <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13) == BUTTON_PRESSED)// BUtton is Active low
 8000772:	e7f1      	b.n	8000758 <main+0x50>
 8000774:	40020000 	.word	0x40020000
 8000778:	40020800 	.word	0x40020800

0800077c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800077c:	480d      	ldr	r0, [pc, #52]	; (80007b4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800077e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000780:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000784:	480c      	ldr	r0, [pc, #48]	; (80007b8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000786:	490d      	ldr	r1, [pc, #52]	; (80007bc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000788:	4a0d      	ldr	r2, [pc, #52]	; (80007c0 <LoopForever+0xe>)
  movs r3, #0
 800078a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800078c:	e002      	b.n	8000794 <LoopCopyDataInit>

0800078e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800078e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000790:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000792:	3304      	adds	r3, #4

08000794 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000794:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000796:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000798:	d3f9      	bcc.n	800078e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800079a:	4a0a      	ldr	r2, [pc, #40]	; (80007c4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800079c:	4c0a      	ldr	r4, [pc, #40]	; (80007c8 <LoopForever+0x16>)
  movs r3, #0
 800079e:	2300      	movs	r3, #0
  b LoopFillZerobss
 80007a0:	e001      	b.n	80007a6 <LoopFillZerobss>

080007a2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80007a2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80007a4:	3204      	adds	r2, #4

080007a6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80007a6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80007a8:	d3fb      	bcc.n	80007a2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80007aa:	f000 f811 	bl	80007d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80007ae:	f7ff ffab 	bl	8000708 <main>

080007b2 <LoopForever>:

LoopForever:
  b LoopForever
 80007b2:	e7fe      	b.n	80007b2 <LoopForever>
  ldr   r0, =_estack
 80007b4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80007b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80007bc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80007c0:	08000838 	.word	0x08000838
  ldr r2, =_sbss
 80007c4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80007c8:	2000001c 	.word	0x2000001c

080007cc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80007cc:	e7fe      	b.n	80007cc <ADC_IRQHandler>
	...

080007d0 <__libc_init_array>:
 80007d0:	b570      	push	{r4, r5, r6, lr}
 80007d2:	4d0d      	ldr	r5, [pc, #52]	; (8000808 <__libc_init_array+0x38>)
 80007d4:	4c0d      	ldr	r4, [pc, #52]	; (800080c <__libc_init_array+0x3c>)
 80007d6:	1b64      	subs	r4, r4, r5
 80007d8:	10a4      	asrs	r4, r4, #2
 80007da:	2600      	movs	r6, #0
 80007dc:	42a6      	cmp	r6, r4
 80007de:	d109      	bne.n	80007f4 <__libc_init_array+0x24>
 80007e0:	4d0b      	ldr	r5, [pc, #44]	; (8000810 <__libc_init_array+0x40>)
 80007e2:	4c0c      	ldr	r4, [pc, #48]	; (8000814 <__libc_init_array+0x44>)
 80007e4:	f000 f818 	bl	8000818 <_init>
 80007e8:	1b64      	subs	r4, r4, r5
 80007ea:	10a4      	asrs	r4, r4, #2
 80007ec:	2600      	movs	r6, #0
 80007ee:	42a6      	cmp	r6, r4
 80007f0:	d105      	bne.n	80007fe <__libc_init_array+0x2e>
 80007f2:	bd70      	pop	{r4, r5, r6, pc}
 80007f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80007f8:	4798      	blx	r3
 80007fa:	3601      	adds	r6, #1
 80007fc:	e7ee      	b.n	80007dc <__libc_init_array+0xc>
 80007fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000802:	4798      	blx	r3
 8000804:	3601      	adds	r6, #1
 8000806:	e7f2      	b.n	80007ee <__libc_init_array+0x1e>
 8000808:	08000830 	.word	0x08000830
 800080c:	08000830 	.word	0x08000830
 8000810:	08000830 	.word	0x08000830
 8000814:	08000834 	.word	0x08000834

08000818 <_init>:
 8000818:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800081a:	bf00      	nop
 800081c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800081e:	bc08      	pop	{r3}
 8000820:	469e      	mov	lr, r3
 8000822:	4770      	bx	lr

08000824 <_fini>:
 8000824:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000826:	bf00      	nop
 8000828:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800082a:	bc08      	pop	{r3}
 800082c:	469e      	mov	lr, r3
 800082e:	4770      	bx	lr
